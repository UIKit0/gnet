# Process this file with autoconf to produce a configure script.

# Some of the stuff that appears here was borrowed from the gtk,
# glib, and libxml configure.in's.

# Require autoconf 2.13
AC_PREREQ(2.13)

# Initialize autoconf
AC_INIT(src/gnet.c)


# On making releases:
#   GNET_MICRO_VERSION += 1;
#   GNET_INTERFACE_AGE += 1;
#   GNET_BINARY_AGE += 1;
# if any functions have been added, set GNET_INTERFACE_AGE to 0.
# if backwards compatibility has been broken,
# set GNET_BINARY_AGE _and_ GNET_INTERFACE_AGE to 0.

AC_DIVERT_PUSH(AC_DIVERSION_NOTICE)
GNET_MAJOR_VERSION=0
GNET_MINOR_VERSION=1
GNET_MICRO_VERSION=10
GNET_INTERFACE_AGE=0
GNET_BINARY_AGE=1
GNET_VERSION=$GNET_MAJOR_VERSION.$GNET_MINOR_VERSION.$GNET_MICRO_VERSION
AC_DIVERT_POP()

AC_SUBST(GNET_MAJOR_VERSION)
AC_SUBST(GNET_MINOR_VERSION)
AC_SUBST(GNET_MICRO_VERSION)
AC_SUBST(GNET_VERSION)
AC_SUBST(GNET_INTERFACE_AGE)
AC_SUBST(GNET_BINARY_AGE)

# libtool versioning
LT_RELEASE=$GNET_MAJOR_VERSION.$GNET_MINOR_VERSION
LT_CURRENT=`expr $GNET_MICRO_VERSION - $GNET_INTERFACE_AGE`
LT_REVISION=$GNET_INTERFACE_AGE
LT_AGE=`expr $GNET_BINARY_AGE - $GNET_INTERFACE_AGE`
AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

VERSION=$GNET_VERSION
PACKAGE=gnet

# Specify a configuration file
AM_CONFIG_HEADER(config.h)

# Define version stuff
AC_DEFINE_UNQUOTED(GNET_MAJOR_VERSION, $GNET_MAJOR_VERSION)
AC_DEFINE_UNQUOTED(GNET_MINOR_VERSION, $GNET_MINOR_VERSION)
AC_DEFINE_UNQUOTED(GNET_MICRO_VERSION, $GNET_MICRO_VERSION)
AC_DEFINE_UNQUOTED(GNET_INTERFACE_AGE, $GNET_INTERFACE_AGE)
AC_DEFINE_UNQUOTED(GNET_BINARY_AGE, $GNET_BINARY_AGE)

# Initialize automake
AM_INIT_AUTOMAKE($PACKAGE, $VERSION, no-define)

# Initialize maintainer mode
AM_MAINTAINER_MODE


# ****************************************
# Set debugging flags

# Figure out debugging default, prior to $ac_help setup
AC_DIVERT_PUSH(AC_DIVERSION_NOTICE)dnl
if test `expr $GNET_MINOR_VERSION \% 2` = 1 ; then
	debug_default=yes
else
	debug_default=minimum
fi
AC_DIVERT_POP()

# Declare --enable-* args and collect ac_help strings
AC_ARG_ENABLE(debug, [  --enable-debug=[no/minimum/yes] turn on debugging [default=$debug_default]],,enable_debug=$debug_default)

# Set the debug flags
if test "x$enable_debug" = "xyes"; then
  test "$cflags_set" = set || CFLAGS="$CFLAGS -g"
  GNET_DEBUG_FLAGS="-DG_ENABLE_DEBUG"
else
  if test "x$enable_debug" = "xno"; then
    GNET_DEBUG_FLAGS="-DG_DISABLE_ASSERT -DG_DISABLE_CHECKS"
  fi
fi

AC_SUBST(GNET_DEBUG_FLAGS)


# ****************************************
# Check for programs

AC_PROG_CC
AM_PROG_CC_STDC
AC_PROG_INSTALL

# Use an many warnings as possible
changequote(,)
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac

  if test "x$enable_ansi" = "xyes"; then
    case " $CFLAGS " in
    *[\ \	]-ansi[\ \	]*) ;;
    *) CFLAGS="$CFLAGS -ansi" ;;
    esac

    case " $CFLAGS " in
    *[\ \	]-pedantic[\ \	]*) ;;
    *) CFLAGS="$CFLAGS -pedantic" ;;
    esac
  fi
fi
changequote([,])

# Use reentrant functions
CFLAGS="$CFLAGS -D_REENTRANT"

# Checks for header files.
AC_HEADER_STDC

# Initialize libtool
AM_PROG_LIBTOOL



# ****************************************
# Check for libraries

# Need GLIB
AM_PATH_GLIB(1.2.0,
            [LIBS="$LIBS $GLIB_LIBS" CFLAGS="$CFLAGS $GLIB_CFLAGS"],
            AC_MSG_ERROR(Cannot find GLIB: Is glib-config in path?))

glib_cflags=`glib-config --cflags glib`
glib_libs=`glib-config --libs glib`

AC_SUBST(glib_cflags)
AC_SUBST(glib_libs)


# Need network libraries
AC_CHECK_LIB(nsl, main)
AC_CHECK_LIB(resolv, main)


# ****************************************
# Checks for header files.

AC_HEADER_STDC

AC_CHECK_HEADERS(sys/sockio.h, AC_DEFINE(HAVE_SYS_SOCKIO_H))
AC_CHECK_HEADERS(sys/poll.h,   AC_DEFINE(HAVE_SYS_POLL_H))


# ****************************************
# Checks for typedefs, structures, and compiler characteristics.


# If gcc is the compiler, compile with lots of warnings
if test "$GCC" = "yes"; then
        CFLAGS="$CFLAGS -Wall -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations "
fi


# ****************************************
# Checks for library functions.

# Check if we have gethostbyname_r (we assume that if the user has gethostbyname_r,
# that they have a similar gethostbyaddr_r).
AC_CHECK_FUNC(gethostbyname_r,
  [

  dnl  First check for the glibc variant of gethostbyname_r

  AC_MSG_CHECKING(for glibc gethostbyname_r)
  AC_TRY_LINK([	#include <netdb.h>],[
	  struct hostent result_buf;
	  char buf[1024];
	  struct hostent* result;
	  int h_errnop;

	  gethostbyname_r("localhost", &result_buf, buf, sizeof(buf),
	                  &result, &h_errnop);
	], [

	  dnl Have glibc gethostbyname_r

	  AC_MSG_RESULT(yes)
	  AC_DEFINE(HAVE_GETHOSTBYNAME_R_GLIBC)
	  HAVE_GETHOSTBYNAME_R=yes

        ], [

  dnl  If we don't have glibc gethostbyname_r, check
  dnl  for Solaris/Irix gethostbyname_r

  AC_MSG_RESULT(no)
  AC_MSG_CHECKING(for Solaris/Irix gethostbyname_r)
  AC_TRY_LINK([ #include <netdb.h>],[
	  struct hostent result;
	  char buf[1024];
	  int h_errnop;

	  gethostbyname_r("localhost", &result, buf, sizeof(buf), &h_errnop);

	], [

	  dnl Have Solaris/Irix gethostbyname_r

  	  AC_MSG_RESULT(yes)
	  AC_DEFINE(HAVE_GETHOSTBYNAME_R_SOLARIS)
	  HAVE_GETHOSTBYNAME_R=yes

	], [
  dnl  If don't have Solaris/Irix gethostbyname_r, check
  dnl  for HP-UX gethostbyname_r

  AC_MSG_RESULT(no)
  AC_MSG_CHECKING(for HP-UX gethostbyname_r)
  AC_TRY_LINK([ #include <netdb.h>],[
	  struct hostent result;
	  char buf[1024];
          gethostbyname_r("localhost", &result, buf);
        ], [
        
          dnl Have HP-UX gethostbyname_r

          AC_MSG_RESULT(yes)
	  AC_DEFINE(HAVE_GETHOSTBYNAME_R_HPUX)
	  HAVE_GETHOSTBYNAME_R=yes

	]
     )]
  )]
)])


dnl If we don't have gethostbyname_r, try to use Glib mutexes
if test -z "$HAVE_GETHOSTBYNAME_R"; then

  AM_PATH_GLIB(1.2.0, AC_DEFINE(HAVE_GETHOSTBYNAME_R_GLIB_MUTEX), [
      AC_MSG_WARN(You have neither Glib threads nor the function gethostbyname_r.
This means that calls to gethostbyname (called by the GNet address functions) will
not be thread safe so could malfunction in programs that use threads.)
    ])
fi




# ****************************************

echo "*** Please ignore any warnings about missing files here"
AC_OUTPUT([
	gnet-config 
	Makefile 
	src/Makefile 
	examples/Makefile 
	doc/Makefile 
	debian/rules
	debian/control
	gnet.spec ],
    [chmod +x gnet-config debian/rules
])
